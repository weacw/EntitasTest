//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PhysicsRaycastComponent physicsRaycast { get { return (PhysicsRaycastComponent)GetComponent(GameComponentsLookup.PhysicsRaycast); } }
    public bool hasPhysicsRaycast { get { return HasComponent(GameComponentsLookup.PhysicsRaycast); } }

    public void AddPhysicsRaycast(IPhysicsRaycast newPhysicsRaycast) {
        var index = GameComponentsLookup.PhysicsRaycast;
        var component = CreateComponent<PhysicsRaycastComponent>(index);
        component.physicsRaycast = newPhysicsRaycast;
        AddComponent(index, component);
    }

    public void ReplacePhysicsRaycast(IPhysicsRaycast newPhysicsRaycast) {
        var index = GameComponentsLookup.PhysicsRaycast;
        var component = CreateComponent<PhysicsRaycastComponent>(index);
        component.physicsRaycast = newPhysicsRaycast;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicsRaycast() {
        RemoveComponent(GameComponentsLookup.PhysicsRaycast);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhysicsRaycast;

    public static Entitas.IMatcher<GameEntity> PhysicsRaycast {
        get {
            if (_matcherPhysicsRaycast == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PhysicsRaycast);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhysicsRaycast = matcher;
            }

            return _matcherPhysicsRaycast;
        }
    }
}
