//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeaponSlotsComponent weaponSlots { get { return (WeaponSlotsComponent)GetComponent(GameComponentsLookup.WeaponSlots); } }
    public bool hasWeaponSlots { get { return HasComponent(GameComponentsLookup.WeaponSlots); } }

    public void AddWeaponSlots(string newMainWeaponId, string newSecondWeaponId) {
        var index = GameComponentsLookup.WeaponSlots;
        var component = CreateComponent<WeaponSlotsComponent>(index);
        component.mainWeaponId = newMainWeaponId;
        component.secondWeaponId = newSecondWeaponId;
        AddComponent(index, component);
    }

    public void ReplaceWeaponSlots(string newMainWeaponId, string newSecondWeaponId) {
        var index = GameComponentsLookup.WeaponSlots;
        var component = CreateComponent<WeaponSlotsComponent>(index);
        component.mainWeaponId = newMainWeaponId;
        component.secondWeaponId = newSecondWeaponId;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponSlots() {
        RemoveComponent(GameComponentsLookup.WeaponSlots);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponSlots;

    public static Entitas.IMatcher<GameEntity> WeaponSlots {
        get {
            if (_matcherWeaponSlots == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponSlots);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponSlots = matcher;
            }

            return _matcherWeaponSlots;
        }
    }
}
